1. Which two binarySearch tests are failing?

The seconds and the third tests are failing.



2. What are the values of arr and goal passed in to binary search?

The arr is [1,2,3,4,5] and the goal is 0;



3. For each of the two cases of binarySearch that are failing, which return statements are they executing in error (is it returning true when it should be returning false, or the other way around)?

The goal 0 == true should be false instead. The goal 20 false should be true instead.



4. What is the bug in binarySearch? How do you fix it?


The issue lies in the fact that the code is comparing iterators, not the actual values they point to. To correct this, replace instances where mid is used to compare values with arr[mid], which will ensure the comparison is made using the values at those positions in the array.



5. Which loops appear to be infinite?

loop #2 and loop #4 are infinite


6. For the loops that you found to be infinite, briefly explain why they are never progressing.


In the second for loop, b remains constantly at 0 and never changes, which leads to the while loop's condition being perpetually true. In the fourth for loop, due to the * -1 at the loop's end, c is limited to values -1 or 1. Consequently, the operation f -= c will always yield results of 6 or 5, which are always greater than 0.



7. What does the call to password.split(" ") appear to do? Hint: examine the input value of "password", then examine the items in the "tokens" array returned by the call.

It splits the password by space.


8. What is the correct password?

"1 4 9 16 25"